name: Discord Webhook Test

on:
  workflow_dispatch:  # This allows manual triggering from the GitHub UI

jobs:
  simulate-task:
    runs-on: ubuntu-latest
    steps:
      - name: Simulate Return
        run: exit 0

  # generate-embeds:
  #   name: Generate Webhook Embeds
  #   needs: simulate-task
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check previous job result
  #     shell: bash
  #     run: |
  #       if [ "${{ needs.simulate-task.result }}" == "success" ]; then
  #           echo "Simulation task succeeded, proceeding with next steps"
  #           # Add your success logic here
  #       else
  #           echo "Simulation task did not succeed, handling accordingly"
  #           # Add your failure handling logic here
  #       fi


  generate-embeds:
    name: Generate Webhook Embeds
    needs: simulate-task
    if: always()
    runs-on: ubuntu-latest
    outputs:
      embeds: ${{ steps.build-embeds.outputs.embeds }}
    steps:
      - name: Build Embeds JSON
        id: build-embeds
        run: |
          # Construct the fields array based on your data
          FIELDS_JSON=$(cat << EOF
          [
            {
              "name": "📜 Instructions",
              "value": "- 📄 Added $INSTRUCTIONS_ADDED\n - 🗃️ Total: $INSTRUCTIONS_TOTAL"
            },
            {
              "name": "📣 Server Messages",
              "value": "- 📥 $MESSAGES_ADDED added\n - ⏭️ $MESSAGES_SKIPPED skipped"
            }
          ]
          EOF
          )
  
          # Build the base embed
          BASE_EMBED=$(cat << EOF
          {
            "author": {
              "name": "Generate manifest.json",
              "url": "https://github.com/ryan-roche/gophermaps-data/actions/workflows/manifest-generator.yml",
              "icon_url": "https://github.com/github.png"
            },
            "title": "${{ needs.simulate-task.result == 'success' && 'Job Succeeded' || 'Job Failed' }}",
            "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "color": ${{ needs.simulate-task.result == 'success' && 4029719 || 12845056 }},
            "fields": $(echo "$FIELDS_JSON" | jq -c .),
            "thumbnail": {
              "url": "https://github.com/actions-user.png"
            }
          }
          EOF
          )
  
          # Initialize the embeds array
          EMBEDS="[$BASE_EMBED"
  
          # Add error embed if needed
          if [ -n "$ERROR_INSTRUCTIONS" ]; then
            ERROR_EMBED=$(cat << EOF
            {
              "title": "⚠️ Ill-formatted Instructions Detected",
              "color": 16098851,
              "description": "$ERROR_INSTRUCTIONS"
            }
            EOF
            )
            EMBEDS="$EMBEDS,$(echo "$ERROR_EMBED" | jq -c .)"
          fi
  
          # Close the array and set output
          EMBEDS="$EMBEDS]"
          echo "embeds=$EMBEDS" >> $GITHUB_OUTPUT
  

  send-discord-message:
    name: Post Discord Webhook
    needs: [simulate-task, generate-embeds]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: "hugoalh/send-discord-webhook-ghaction@v7.0.0"
      with:
        key: "${{secrets.DISCORD_WEBHOOK_URL}}"
        username: "GopherMaps Data"
        avatar_url: "https://github.com/ryan-roche/gophermaps-data/blob/main/webhook-icons/gw-data.png?raw=true"
        embeds: ${{ needs.generate-embeds.outputs.embeds }}
